{"version":3,"sources":["store/action.js","store/reducer.js","components/header/header.jsx","components/text-area/text-area.jsx","components/total-time/total-time.jsx","components/accuracy/accuracy.jsx","components/speed-typing/speed-typing.jsx","components/repeat-button/repeat-button.jsx","components/result-data-block/result-data-block.jsx","components/example-text-block/example-text-block.jsx","components/result-text-block/result-text-block.jsx","components/main-block/main-block.jsx","components/general/general.jsx","App.js","reportWebVitals.js","index.js","store/api-action.js"],"names":["ActionType","ActionCreator","text","type","payload","newText","finallyTime","initialState","isDataLoaded","data","user","userText","startTime","Header","className","connect","state","exampleText","dispatch","textChange","setFinallyTime","props","textRef","useRef","ref","onChange","current","value","length","join","Math","floor","performance","now","timeStart","useState","update","useEffect","timer","setInterval","clearInterval","time","userWords","split","exampleTextWords","errorCount","i","round","speed","RepeatButton","onClick","evt","preventDefault","window","location","reload","ResultDataBlock","map","word","index","MainBlock","General","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","applyMiddleware","thunk","fetch","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27a7ba88.chunk.js","sourcesContent":["export const ActionType = {\n    LOAD_TEXT: 'data/loadText',\n    CHANGE_NEXT: 'user/changeText',\n    SET_FINALLY_TIME: 'user/setFinallyTime',\n};\n\nexport const ActionCreator = {\n    loadText: (text) => ({\n        type: ActionType.LOAD_TEXT,\n        payload: text,\n    }),\n    changeText: (newText) => ({\n        type: ActionType.CHANGE_NEXT,\n        payload: newText,\n    }),\n    setFinallyTime: (finallyTime) => ({\n        type: ActionType.SET_FINALLY_TIME,\n        payload: finallyTime,\n    }),\n};\n","import {ActionType} from './action.js';\n\nexport const initialState = {\n    text: {\n        isDataLoaded: false,\n        data: [],\n    },\n    user: {\n        userText: '',\n        startTime: null,\n        finallyTime: null,\n    },\n};\n\n\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionType.LOAD_TEXT :\n            return {\n                ...state,\n                text: {\n                    ...state.text,\n                    data: action.payload,\n                    isDataLoaded: true,\n                }\n            };\n        case ActionType.CHANGE_NEXT :\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    userText: action.payload,\n                    startTime: state.user.startTime !== null\n                        ? state.user.startTime\n                        : performance.now(),\n                }\n            }\n\n        case ActionType.SET_FINALLY_TIME :\n            return {\n                ...state,\n                user : {\n                    ...state.user,\n                    finallyTime: action.payload,\n                }\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\n\nexport default function Header() {\n    return (\n        <header className=\"header\">\n            <span className=\"header__logo\">Typing Simulator</span>\n        </header>\n    )\n};","import React, {useRef} from 'react';\nimport {ActionCreator} from '../../store/action';\nimport {connect} from \"react-redux\";\n\nexport function TextArea(props) {\n\n    const {textChange, exampleText, setFinallyTime} = props;\n    const textRef = useRef();\n\n   const handelTextChange = () => {\n        let finallyTime = null;\n        const userText = textRef.current.value;\n           if (userText.length === exampleText.join(' ').length) {\n               finallyTime = Math.floor(performance.now() / 1000);\n               setFinallyTime(finallyTime);\n           }\n        textChange(userText);\n    }\n\n    return (\n        <textarea ref={textRef} onChange={handelTextChange} className=\"text-block__text-area\"/>\n    )\n};\n\nconst mapStateToProps = (state) => (\n    {\n        exampleText: state.text.data\n    }\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n    textChange(userText) {\n        dispatch(ActionCreator.changeText(userText))\n    },\n    setFinallyTime(finallyTime) {\n        dispatch(ActionCreator.setFinallyTime(finallyTime))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextArea);","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\n\n\nexport function TotalTime(props) {\n    const {timeStart, finallyTime} = props;\n    const [, update] = useState();\n    useEffect(() => { //способ заставить компонент перерисовываться каждую секунду\n        const timer = setInterval(() => {\n            update({})\n        }, 1000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [])\n\n    const time = timeStart === null ? 0 : Math.floor((performance.now() - timeStart) / 1000)\n    return (\n        <li className=\"text-block__data-item\">\n            <p className=\"text-block__text\">Общее время</p>\n            <div className=\"text-block__result\">\n                <div className=\"icon icon--time\"></div>\n                <p className=\"text-block__text\">{finallyTime ? finallyTime : time} сек</p>\n            </div>\n        </li>\n    )\n};\n\n\n\nconst mapStateToProps = (state) => (\n    {\n        timeStart: state.user.startTime,\n        finallyTime: state.user.finallyTime,\n    }\n);\n\nexport default connect(mapStateToProps)(TotalTime);","import React from 'react';\nimport {connect} from \"react-redux\";\n\n\nexport function Accuracy(props) {\n    const {userText, exampleText} = props;\n    const userWords = userText.split(' ');\n    const exampleTextWords = exampleText.join(' ').split(' ');\n\n    let errorCount = 0;\n    for (let i = 0; i < userWords.length; i++) {\n        if (userWords[i].length < exampleTextWords[i].length && i === (userWords.length - 1)) {\n            continue;\n        }\n        if ((userText !== '') && (userWords[i] !== exampleTextWords[i])) {\n            errorCount = errorCount + 1;\n        }\n    }\n\n    return (\n        <li className=\"text-block__data-item\">\n            <p className=\"text-block__text\">Точность</p>\n            <div className=\"text-block__result\">\n                <div className=\"icon icon--accuracy\"></div>\n                <p className=\"text-block__text\">{Math.round((((userWords.length) - errorCount) * 100)/ userWords.length)}%</p>\n            </div>\n        </li>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    userText: state.user.userText,\n    exampleText: state.text.data\n});\n\nexport default connect(mapStateToProps)(Accuracy);","import React, {useState, useEffect}from 'react';\nimport {connect} from \"react-redux\";\n\nexport function SpeedTyping(props) {\n    const {timeStart, finallyTime, userText} = props;\n    const [, update] = useState();\n    useEffect(() => { //способ заставить компонент перерисовываться каждую секунду\n        const timer = setInterval(() => {\n            update({})\n        }, 1000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, []);\n\n    const time = finallyTime\n        ? finallyTime\n        : (timeStart === null\n            ? 0\n            : Math.floor((performance.now() - timeStart) / 1000));\n    const speed = time >= 1 ? Math.round(userText.length / (time / 60)) : 0;\n\n    return (\n        <li className=\"text-block__data-item\">\n            <p className=\"text-block__text\">Скорость</p>\n            <div className=\"text-block__result\">\n                <div className=\"icon icon--speed\"></div>\n                <p className=\"text-block__text\">{speed}</p> <br/><p className=\"text-block__text\">зн/мин</p>\n            </div>\n        </li>\n    )\n};\n\nconst mapStateToProps = (state) => (\n    {\n        timeStart: state.user.startTime,\n        finallyTime: state.user.finallyTime,\n        userText: state.user.userText,\n    }\n);\nexport default connect(mapStateToProps)(SpeedTyping);","import React from 'react';\n\nexport default function RepeatButton() {\n    const handlerOnClick = (evt) => {\n        evt.preventDefault();\n        window.location.reload()\n    }\n    return (\n        <button onClick={handlerOnClick} className=\"button\">Повторить</button>\n    )\n}","import React from 'react';\nimport TotalTime from \"../total-time/total-time\";\nimport Accuracy from \"../accuracy/accuracy\";\nimport SpeedTyping from \"../speed-typing/speed-typing\";\nimport RepeatButton from \"../repeat-button/repeat-button\";\n\nexport default function ResultDataBlock() {\n    return (\n        <div className=\"text-block__data\">\n            <ul className=\"text-block__data-list\">\n                <SpeedTyping/>\n                <Accuracy/>\n                <TotalTime/>\n            </ul>\n            <RepeatButton/>\n        </div>\n    )\n};","import React from 'react';\nimport {connect} from 'react-redux'\n\n\nexport function ExampleTextBlock(props) {\n    const {text} = props;\n\n    return (\n        <div className=\"text-block__text-area\">{text.join()}</div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    text: state.text.data,\n});\n\nexport default connect(mapStateToProps)(ExampleTextBlock);","import React from 'react';\nimport {connect} from \"react-redux\";\n\nexport function ResultTextBlock(props) {\n    const {userText, exampleText} = props;\n    const userWords = userText !== '' ? userText.split(' ') : [];\n    const exampleTextWords = exampleText.join(' ').split(' ')\n\n    return (\n        <div className=\"text-block__text-area text-block__text-area--result\"><p>{\n            userWords.map((word, index) =>\n                word ===  exampleTextWords[index]\n                ? <span className=\"success\">{word}</span>\n                : word.length < exampleTextWords[index].length && index === (userWords.length - 1)\n                    ? <span>{word}</span>\n                    : <span className=\"error\">{word}</span>\n            )}</p></div>\n    )\n};\n\nconst mapStateToProps = (state) => (\n    {\n        userText: state.user.userText,\n        exampleText: state.text.data\n    }\n);\nexport default connect(mapStateToProps)(ResultTextBlock);\n","import React from 'react';\nimport TextArea from \"../text-area/text-area\";\nimport ResultDataBlock from \"../result-data-block/result-data-block\";\nimport ExampleTextBlock from \"../example-text-block/example-text-block\";\nimport ResultTextBlock from \"../result-text-block/result-text-block\";\n\nexport default function MainBlock() {\n    return (\n        <main>\n            <div className=\"text-block\">\n                <ExampleTextBlock/>\n                <ResultTextBlock/>\n                <TextArea/>\n                <ResultDataBlock/>\n            </div>\n        </main>\n    )\n};","import React from 'react';\nimport Header from \"../header/header\";\nimport MainBlock from \"../main-block/main-block\";\n\nexport default function General() {\n    return (\n        <>\n            <Header/>\n            <MainBlock/>\n        </>\n    )\n};","import './App.css';\nimport {HashRouter} from 'react-router-dom';\nimport General from \"./components/general/general\";\n\nfunction App() {\n  return (\n      <HashRouter>\n        <General/>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware } from 'redux';\nimport {Provider} from \"react-redux\";\nimport {reducer} from \"./store/reducer.js\";\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {fetchText} from \"./store/api-action\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nstore.dispatch(fetchText());\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();","import {ActionCreator} from './action'\n\nexport const fetchText = () => (dispatch) => {\n    return fetch(`https://baconipsum.com/api/?type=all-meat&sentences=3&start-with-lorem=1`)\n        .then((response) => response.json())\n        .then((response) => dispatch(ActionCreator.loadText(response)))\n};"],"sourceRoot":""}